{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0", 
    "parameters": {
        "workspaceName": {
            "type": "string",
            "defaultValue": "new02",
            "metadata": {
                "description": "Specifies the name of the Azure Machine Learning workspace."
            }
        },
        "sku": {
            "type": "string",
            "defaultValue": "basic",
            "allowedValues": [
                "basic",
                "enterprise"
            ],
            "metadata": {
                "description": "Specifies the sku, also referred as 'edition' of the Azure Machine Learning workspace."
            }
        },
        "storageAccountNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ]
        },
        "wsStorageAccountName": {
            "type": "string",
            "defaultValue": "[concat('sa',uniqueString(resourceGroup().id))]"
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GZRS",
                "Standard_RAGZRS"
            ]
        },
        "wsStorageAccountResourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]"
        },
        "keyVaultNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Determines whether or not a key vault should be provisioned."
            }
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": "[concat('kv',uniqueString(resourceGroup().id))]"
        },
        "keyVaultResourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]"
        },
        "applicationInsightsNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ]
        },
        "applicationInsightsName": {
            "type": "string",
            "defaultValue": "[concat('ai',uniqueString(resourceGroup().id))]"
        },
        "applicationInsightsResourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]"
        },
        "containerRegistryNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ]
        },
        "containerRegistryName": {
            "type": "string",
            "defaultValue": "[concat('acr',uniqueString(resourceGroup().id))]"
        },
        "containerRegistrySku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ]
        },
        "containerRegistryResourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]"
        },
        "confidential_data": {
            "type": "string",
            "defaultValue": "false",
            "allowedValues": [
                "false",
                "true"
            ],
            "metadata": {
                "description": "Specifies that the Azure Machine Learning workspace holds highly confidential data."
            }
        },
        "encryption_status": {
            "type": "string",
            "defaultValue": "Disabled",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "metadata": {
                "description": "Specifies if the Azure Machine Learning workspace should be encrypted with customer managed key."
            }
        },
        "cmk_keyvault": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the customer managed keyVault arm id."
            }
        },
        "resource_cmk_uri": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies if the customer managed keyvault key uri."
            }
        },
        "functionAppName": {
            "defaultValue": "fappDeploy",
            "type": "string",
            "metadata": {
                "description": "Name use as base-template to named the resources to be deployed in Azure."
            }
        },
        "functionGitHubURL": {
            "type": "string",
            "metadata": {
                "description": "The URL of GitHub (ending by .git)"
            }
        },
        "functionGitHubBranch": {
            "type": "string",
            "defaultValue": "master",
            "metadata": {
                "description": "Name of the branch to use when deploying (Default = master)."
            }
        },
        "ExpireOn":{
            "type":"string",
            "defaultValue":"[utcNow('yyyy-MM-dd')]",
            "metadata": {
                "description": "Just a text value (format: yyyy-MM-dd) that express when it is safe to delete these resources"
            }
        },
        "ownerName":{
            "type":"string",
            "defaultValue": "aml_infra",
            "metadata": {
                "description": "Owner of this deployment, person to contact for question."
            }
        },
        "eventGridSubscriptionName": {
            "type": "string",
            "defaultValue": "EventGridSubscriptionName",
            "metadata": {
                "description": "The prefix of the Event Grid custom topic's subscription."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location in which the Event Grid resources should be deployed."
            }
        },
        "functionAppResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]"
        },
        "functionName" :{
            "type": "string",
            "defaultValue": "GridEventHandle"
        },
        "functionFolder": {
            "type": "string",
            "metadata": {
                "description": "The name of folder containing the function code."
            }
        },
        "patToken": {
            "type": "string",
            "defaultValue": "temppat",
            "metadata": {
                "description": "The name of folder containing the function code."
            }
        },
        "computeName": {
            "type": "string",
            "defaultValue": "mycluster",
            "metadata": {
                "description": "The name of compute target."
            }
        }
    },
    "variables":{
        "subscription_id" : "[subscription().subscriptionId]",
        "suffix": "[substring(toLower(uniqueString(resourceGroup().id, resourceGroup().location)),0,5)]",
        "funcAppName": "[toLower(concat(parameters('functionAppName'), variables('suffix')))]",
        "funcStorageAccountName": "[tolower(concat(substring(parameters('functionAppName'), 0, min(length(parameters('functionAppName')),16)), variables('suffix'), 'stg'))]",
        "funcHhostingPlanName": "[concat(substring(parameters('functionAppName'), 0, min(length(parameters('functionAppName')),14)), variables('suffix'), 'plan')]",
        "insightsAppName":"[concat(substring(parameters('functionAppName'), 0, min(length(parameters('functionAppName')),14)), variables('suffix'), '-meta')]",
        "functionProjectFolder": "[parameters('functionFolder')]",
        "functionUrl" : "[concat('https://', variables('funcAppName'),'.azurewebsites.net/api/', parameters('functionName'),'?code=')]",

        "topicname":"[concat('/subscriptions/', variables('subscription_id'), '/resourcegroups/', parameters('functionAppResourceGroup'), '/providers/Microsoft.MachineLearningServices/workspaces/', parameters('workspaceName'))]",

        "tenantId": "[subscription().tenantId]",
        "wsStorageAccount": "[resourceId(parameters('wsStorageAccountResourceGroupName'), 'Microsoft.Storage/storageAccounts', parameters('wsStorageAccountName'))]",
        "keyVault": "[resourceId(parameters('keyVaultResourceGroupName'), 'Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "applicationInsights": "[resourceId(parameters('applicationInsightsResourceGroupName'), 'Microsoft.Insights/components', parameters('applicationInsightsName'))]",
        "containerRegistry": "[resourceId(parameters('containerRegistryResourceGroupName'), 'Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]"
    },
    "resources": [
        {
            "condition": "[equals(parameters('storageAccountNewOrExisting'), 'new')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('wsStorageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "StorageV2",
            "properties": {
                "encryption": {
                    "services": {
                        "blob": {
                            "enabled": true
                        },
                        "file": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "condition": "[equals(parameters('keyVaultNewOrExisting'), 'new')]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[parameters('keyVaultName')]",
            "location": "[parameters('location')]",
            "properties": {
                "tenantId": "[variables('tenantId')]",
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "accessPolicies": []
            }
        },
        {
            "condition": "[equals(parameters('applicationInsightsNewOrExisting'), 'new')]",
            "type": "Microsoft.Insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[parameters('applicationInsightsName')]",
            "location": "[if(or(equals(parameters('location'),'eastus2'), equals(parameters('location'),'westcentralus')),'southcentralus',parameters('location'))]",
            "kind": "web",
            "properties": {
                "Application_Type": "web"
            }
        },
        {
            "condition": "[equals(parameters('containerRegistryNewOrExisting'), 'new')]",
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2019-05-01",
            "name": "[parameters('containerRegistryName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('containerRegistrySku')]"
            },
            "properties": {
                "adminUserEnabled": true
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces",
            "apiVersion": "2020-03-01",
            "name": "[parameters('workspaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('wsStorageAccount')]",
                "[variables('keyVault')]",
                "[variables('applicationInsights')]",
                "[variables('containerRegistry')]"
            ],
            "identity": {
                "type": "systemAssigned"
            },
            "sku": {
                "tier": "[parameters('sku')]",
                "name": "[parameters('sku')]"
            },
            "properties": {
                "friendlyName": "[parameters('workspaceName')]",
                "storageAccount": "[variables('wsStorageAccount')]",
                "keyVault": "[variables('keyVault')]",
                "applicationInsights": "[variables('applicationInsights')]",
                "encryption": {
                    "status": "[parameters('encryption_status')]",
                    "keyVaultProperties": {
                        "keyVaultArmId": "[parameters('cmk_keyvault')]",
                        "keyIdentifier": "[parameters('resource_cmk_uri')]"
                    }
                },
                "hbiWorkspace": "[parameters('confidential_data')]"
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces/computes",
            "apiVersion": "2020-04-01",
            "name": "[concat(parameters('workspaceName'), '/', parameters('computeName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('workspaceName'))]"
            ],
            "properties": {
                "description": "AML Cluster created by ARM template",
                "computeType": "AmlCompute",
                "computeLocation": "[parameters('location')]",
                "properties": {
                    "vmSize": "STANDARD_DS3_V2",
                    "vmPriority": "Dedicated",
                    "scaleSettings": {
                        "maxNodeCount": 4,
                        "minNodeCount": 0,
                        "nodeIdleTimeBeforeScaleDown": "PT2M"
                    },
                    "remoteLoginPortPublicAccess": "Enabled"
                }
            }
        }
    ],
    "outputs":{}
}
